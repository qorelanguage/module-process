
#include <qore/Qore.h>



/** @mainpage %Qore %Process Module

A Qore wrapper around Boost.Process by  Klemens David Morgenstern .

This module is released under a choice of two licenses:

 - LGPL 2.1
 - MIT (see COPYING.MIT in the source distribution for more information)

Boost parts in src/boost are distributed underthe Boost Software License,
Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

Process is a module to manage system processes. It can be used to:

 - create child processes
 - communicate with child processes through standard input/output/error
 - wait for processes to exit
 - terminate processes
 - and more

*/

static QoreNamespace ProcessNS("Process");


QoreClass* initProcessClass(QoreNamespace& ns);


QoreStringNode * process_module_init() {
    ProcessNS.addSystemClass(initProcessClass(ProcessNS));

    return 0;
}

void process_module_ns_init(QoreNamespace *rns, QoreNamespace *qns) {
    qns->addNamespace(ProcessNS.copy());
}

void process_module_delete() {
   // nothing to do here in this case
}


// qore module symbols
DLLEXPORT char qore_module_name[] = "process";
DLLEXPORT char qore_module_version[] = PACKAGE_VERSION;
DLLEXPORT char qore_module_description[] = "Process module";
DLLEXPORT char qore_module_author[] = "Petr Vanek";
DLLEXPORT char qore_module_url[] = "http://qore.org";
DLLEXPORT int qore_module_api_major = QORE_MODULE_API_MAJOR;
DLLEXPORT int qore_module_api_minor = QORE_MODULE_API_MINOR;
DLLEXPORT qore_module_init_t qore_module_init = process_module_init;
DLLEXPORT qore_module_ns_init_t qore_module_ns_init = process_module_ns_init;
DLLEXPORT qore_module_delete_t qore_module_delete = process_module_delete;
DLLEXPORT qore_license_t qore_module_license = QL_LGPL;

