/*
    Qore Programming Language process Module

    Copyright (C) 2003 - 2019 Qore Technologies, s.r.o.

    Permission is hereby granted, free of charge, to any person obtaining a
    copy of this software and associated documentation files (the "Software"),
    to deal in the Software without restriction, including without limitation
    the rights to use, copy, modify, merge, publish, distribute, sublicense,
    and/or sell copies of the Software, and to permit persons to whom the
    Software is furnished to do so, subject to the following conditions:

    The above copyright notice and this permission notice shall be included in
    all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
    FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
    DEALINGS IN THE SOFTWARE.
*/

#include <qore/Qore.h>

/** @mainpage %Qore %Process Module

    @tableofcontents

    @section processintro Process Module Introduction

The %process module is a Qore wrapper around <a href="http://www.boost.org/doc/libs/release/libs/process/">Boost.Process</a> by Klemens David Morgenstern.

Primary class provided by this module:
- @ref Qore::Process::Process "Process"

The %process module provdes an API to manage system processes. It can be used to:
 - create child processes
 - communicate with child processes through standard input/output/error
 - wait for processes to exit
 - terminate processes
 - get process memory and CPU load information
 - and more

    @section process_license Process Module License Information

This module is released under the MIT license (see COPYING in the source distribution for more information)

Boost parts in src/boost are distributed under the Boost Software License,
Version 1.0. (See http://www.boost.org/LICENSE_1_0.txt)

    @section process_relnotes Process Module Release History

    @subsection process_v0_0_2 process v0.0.2
    - fixed error handling @ref Process::Process::readStdout() "Process::readStdout()" and @ref Process::Process::readStderr() "Process::readStderr()" with negative arguments (<a href="https://github.com/qorelanguage/qore/issues/2333">issue 2333</a>)

    @subsection process_v0_0_1 process v0.0.1
    - initial release of the process module
*/

static QoreNamespace ProcessNS("Process");

DLLLOCAL const TypedHashDecl* hashdeclMemorySummaryInfo;


DLLLOCAL QoreClass* initProcessClass(QoreNamespace& ns);

DLLLOCAL TypedHashDecl* init_hashdecl_MemorySummaryInfo(QoreNamespace& ns);

QoreStringNode* process_module_init() {
    hashdeclMemorySummaryInfo = init_hashdecl_MemorySummaryInfo(ProcessNS);

    ProcessNS.addSystemClass(initProcessClass(ProcessNS));

    return 0;
}

void process_module_ns_init(QoreNamespace* rns, QoreNamespace* qns) {
    qns->addNamespace(ProcessNS.copy());
}

void process_module_delete() {
   // nothing to do here in this case
}


// qore module symbols
DLLEXPORT char qore_module_name[] = "process";
DLLEXPORT char qore_module_version[] = PACKAGE_VERSION;
DLLEXPORT char qore_module_description[] = "Process module";
DLLEXPORT char qore_module_author[] = "Petr Vanek";
DLLEXPORT char qore_module_url[] = "http://qore.org";
DLLEXPORT int qore_module_api_major = QORE_MODULE_API_MAJOR;
DLLEXPORT int qore_module_api_minor = QORE_MODULE_API_MINOR;
DLLEXPORT qore_module_init_t qore_module_init = process_module_init;
DLLEXPORT qore_module_ns_init_t qore_module_ns_init = process_module_ns_init;
DLLEXPORT qore_module_delete_t qore_module_delete = process_module_delete;
DLLEXPORT qore_license_t qore_module_license = QL_MIT;
